Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
                              avr_sja1000p.o (__mulsi3)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
                              avr_sja1000p.o (__udivmodsi4)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o (exit)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ltoa.o)
                              display.o (ltoa)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ltoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

fsm_sensor          0x7               main.o
rx_msg              0xf               main.o
adc_data            0x3               sensor.o
chip                0xb               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
LOAD main.o
LOAD lcd.o
LOAD display.o
LOAD sja_control.o
LOAD avr_sja1000p.o
LOAD sensor.o
LOAD timer.o
LOAD fsm.o
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1382
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092      0x16a main.o
                0x00000092                main
                0x00000196                __vector_1
 .text          0x000001fc      0x1f8 lcd.o
                0x000002be                lcd_command
                0x000002d2                lcd_data
                0x000002e6                lcd_gotoxy
                0x000002fa                lcd_getxy
                0x00000302                lcd_clrscr
                0x0000030a                lcd_home
                0x00000312                lcd_putc
                0x0000033c                lcd_puts
                0x0000035c                lcd_puts_p
                0x00000380                lcd_init
 .text          0x000003f4       0x94 display.o
                0x000003f4                lcd_clear_line
                0x00000412                lcd_puts_line
                0x00000436                debug
 .text          0x00000488       0x96 sja_control.o
                0x00000488                init_ports
                0x000004a2                can_read_reg
                0x000004d6                can_write_reg
                0x0000050e                can_enable_irq
                0x00000516                can_disable_irq
 .text          0x0000051e      0x94a avr_sja1000p.o
                0x0000051e                sja1000p_send_msg
                0x0000052a                sja1000p_read
                0x00000660                sja1000p_irq_handler
                0x0000075e                sja1000p_disable_configuration
                0x000007c8                sja1000p_enable_configuration
                0x00000852                sja1000p_pre_write_config
                0x000009e8                sja1000p_baud_rate
                0x00000cde                sja1000p_extended_mask
                0x00000d50                sja1000p_chip_config
 .text          0x00000e68      0x360 sensor.o
                0x00000e68                __vector_14
                0x00000e92                fsm_sensor_init
                0x00000f3e                sensor_init
                0x0000109a                sensor_config
 .text          0x000011c8       0x5e timer.o
                0x000011c8                __vector_19
                0x00001212                timer0_init_1khz
 .text          0x00001226       0x4e fsm.o
                0x00001226                init_fsm
                0x00001238                run_fsm
 .text          0x00001274        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
 .text          0x00001274        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x00001274        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x00001274        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x00001274        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text          0x00001274        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ltoa.o)
 .text          0x00001274        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
                0x00001274                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001274       0x3e /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
                0x00001274                __mulsi3
 .text.libgcc   0x000012b2       0x44 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
                0x000012b2                __udivmodsi4
 .text.libgcc   0x000012f6        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000012f6        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000012f6        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000012f6       0x68 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ltoa.o)
                0x000012f6                ltoa
 .text.avr-libc
                0x0000135e       0x20 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
                0x0000135e                strrev
                0x0000137e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000137e        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x0000137e                exit
                0x0000137e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000137e        0x4 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00001382                _etext = .

.data           0x00800060      0x160 load address 0x00001382
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
 .data          0x00800060       0x27 main.o
 .data          0x00800087        0x0 lcd.o
 .data          0x00800087        0x2 display.o
 .data          0x00800089        0x0 sja_control.o
 .data          0x00800089       0xd0 avr_sja1000p.o
 .data          0x00800159       0x66 sensor.o
 .data          0x008001bf        0x0 timer.o
 .data          0x008001bf        0x0 fsm.o
 .data          0x008001bf        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
 .data          0x008001bf        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x008001bf        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x008001bf        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x008001bf        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .data          0x008001bf        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ltoa.o)
 .data          0x008001bf        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008001c0                . = ALIGN (0x2)
 *fill*         0x008001bf        0x1 00
                0x008001c0                _edata = .
                0x008001c0                PROVIDE (__data_end, .)

.bss            0x008001c0       0x42
                0x008001c0                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008001c0        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
 .bss           0x008001c0        0x0 main.o
 .bss           0x008001c0        0x0 lcd.o
 .bss           0x008001c0        0x0 display.o
 .bss           0x008001c0        0x0 sja_control.o
 .bss           0x008001c0        0x0 avr_sja1000p.o
 .bss           0x008001c0       0x1a sensor.o
 .bss           0x008001da        0x4 timer.o
                0x008001da                timer0_msec
 .bss           0x008001de        0x0 fsm.o
 .bss           0x008001de        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
 .bss           0x008001de        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x008001de        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x008001de        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x008001de        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .bss           0x008001de        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ltoa.o)
 .bss           0x008001de        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008001de       0x21 main.o
                0x008001de                fsm_sensor
                0x008001e5                rx_msg
                0x008001f4                chip
 COMMON         0x008001ff        0x3 sensor.o
                0x008001ff                adc_data
                0x00800202                PROVIDE (__bss_end, .)
                0x00001382                __data_load_start = LOADADDR (.data)
                0x000014e2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800202        0x0
                0x00800202                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800202                PROVIDE (__noinit_end, .)
                0x00800202                _end = .
                0x00800202                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x4cbc
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
 .stab          0x000006b4      0x834 main.o
                                0x840 (size before relaxing)
 .stab          0x00000ee8      0xc9c lcd.o
                                0xef4 (size before relaxing)
 .stab          0x00001b84      0x354 display.o
                                0x5b8 (size before relaxing)
 .stab          0x00001ed8      0x54c sja_control.o
                                0x6fc (size before relaxing)
 .stab          0x00002424     0x1674 avr_sja1000p.o
                               0x18cc (size before relaxing)
 .stab          0x00003a98      0xa80 sensor.o
                                0xd68 (size before relaxing)
 .stab          0x00004518      0x210 timer.o
                                0x3f0 (size before relaxing)
 .stab          0x00004728      0x228 fsm.o
                                0x234 (size before relaxing)
 .stab          0x00004950      0x294 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(ltoa.o)
                                0x2a0 (size before relaxing)
 .stab          0x00004be4       0xd8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000     0x20a9
 *(.stabstr)
 .stabstr       0x00000000     0x20a9 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(../build/AVR_CAN_proj.elf elf32-avr)
LOAD linker stubs
