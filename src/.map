Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
                              avr_sja1000p.o (__mulsi3)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
                              avr_sja1000p.o (__udivmodsi4)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o (exit)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(itoa.o)
                              display.o (itoa)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

tx_msg              0xe               main.o
rx_msg              0xe               main.o
chip                0xb               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
LOAD main.o
LOAD lcd.o
LOAD display.o
LOAD sja_control.o
LOAD avr_sja1000p.o
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xf22
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092      0x126 main.o
                0x00000092                main
                0x0000016c                __vector_1
 .text          0x000001b8      0x1f8 lcd.o
                0x0000027a                lcd_command
                0x0000028e                lcd_data
                0x000002a2                lcd_gotoxy
                0x000002b6                lcd_getxy
                0x000002be                lcd_clrscr
                0x000002c6                lcd_home
                0x000002ce                lcd_putc
                0x000002f8                lcd_puts
                0x00000318                lcd_puts_p
                0x0000033c                lcd_init
 .text          0x000003b0       0x94 display.o
                0x000003b0                lcd_clear_line
                0x000003ce                lcd_puts_line
                0x000003f2                debug
 .text          0x00000444       0x96 sja_control.o
                0x00000444                init_ports
                0x0000045e                can_read_reg
                0x00000492                can_write_reg
                0x000004ca                can_enable_irq
                0x000004d2                can_disable_irq
 .text          0x000004da      0x938 avr_sja1000p.o
                0x000004da                sja1000p_send_msg
                0x000004e6                sja1000p_read
                0x00000608                sja1000p_irq_handler
                0x00000708                sja1000p_disable_configuration
                0x00000772                sja1000p_enable_configuration
                0x000007fc                sja1000p_pre_write_config
                0x00000992                sja1000p_baud_rate
                0x00000c88                sja1000p_extended_mask
                0x00000cfa                sja1000p_chip_config
 .text          0x00000e12        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
 .text          0x00000e12        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x00000e12        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x00000e12        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x00000e12        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000e12        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(itoa.o)
 .text          0x00000e12        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
 .text          0x00000e12        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
                0x00000e12                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000e12       0x3e /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
                0x00000e12                __mulsi3
 .text.libgcc   0x00000e50       0x44 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
                0x00000e50                __udivmodsi4
 .text.libgcc   0x00000e94        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000e94        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000e94        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000e94       0x42 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(itoa.o)
                0x00000e94                itoa
 .text.avr-libc
                0x00000ed6       0x20 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
                0x00000ed6                strrev
 .text.libgcc   0x00000ef6       0x28 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
                0x00000ef6                __udivmodhi4
                0x00000f1e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000f1e        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x00000f1e                exit
                0x00000f1e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000f1e        0x4 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000f22                _etext = .

.data           0x00800060       0xfa load address 0x00000f22
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
 .data          0x00800060       0x27 main.o
 .data          0x00800087        0x0 lcd.o
 .data          0x00800087        0x2 display.o
 .data          0x00800089        0x0 sja_control.o
 .data          0x00800089       0xd0 avr_sja1000p.o
 .data          0x00800159        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
 .data          0x00800159        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x00800159        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x00800159        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x00800159        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .data          0x00800159        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(itoa.o)
 .data          0x00800159        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
 .data          0x00800159        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080015a                . = ALIGN (0x2)
 *fill*         0x00800159        0x1 00
                0x0080015a                _edata = .
                0x0080015a                PROVIDE (__data_end, .)

.bss            0x0080015a       0x28
                0x0080015a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080015a        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
 .bss           0x0080015a        0x1 main.o
                0x0080015a                sja_status
 .bss           0x0080015b        0x0 lcd.o
 .bss           0x0080015b        0x0 display.o
 .bss           0x0080015b        0x0 sja_control.o
 .bss           0x0080015b        0x0 avr_sja1000p.o
 .bss           0x0080015b        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mulsi3.o)
 .bss           0x0080015b        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0080015b        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x0080015b        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x0080015b        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0080015b        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(itoa.o)
 .bss           0x0080015b        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
 .bss           0x0080015b        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080015b       0x27 main.o
                0x0080015b                tx_msg
                0x00800169                rx_msg
                0x00800177                chip
                0x00800182                PROVIDE (__bss_end, .)
                0x00000f22                __data_load_start = LOADADDR (.data)
                0x0000101c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800182        0x0
                0x00800182                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800182                PROVIDE (__noinit_end, .)
                0x00800182                _end = .
                0x00800182                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x3c30
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o
 .stab          0x000006b4      0x750 main.o
                                0x75c (size before relaxing)
 .stab          0x00000e04      0xc9c lcd.o
                                0xef4 (size before relaxing)
 .stab          0x00001aa0      0x354 display.o
                                0x5b8 (size before relaxing)
 .stab          0x00001df4      0x540 sja_control.o
                                0x6fc (size before relaxing)
 .stab          0x00002334     0x1674 avr_sja1000p.o
                               0x18c0 (size before relaxing)
 .stab          0x000039a8      0x1b0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x00003b58       0xd8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000     0x193e
 *(.stabstr)
 .stabstr       0x00000000     0x193e /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm16.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(../build/AVR_CAN_proj.elf elf32-avr)
LOAD linker stubs
